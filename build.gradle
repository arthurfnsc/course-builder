buildscript {

	ext {

		beanManesVersion = "0.14.0"
		springBootVersion = "1.5.2.RELEASE"
	}

	repositories {

		jcenter()
		mavenCentral()
		mavenLocal()
	}

	dependencies {

		classpath "com.github.ben-manes:gradle-versions-plugin:${beanManesVersion}"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

apply plugin: "project-report"

htmlDependencyReport { projects = project.allprojects }

allprojects {
	group "br.com.presstartup"
	version "1.0.0"
}

subprojects {

	apply plugin: "codenarc"
	apply plugin: "com.github.ben-manes.versions"
	apply plugin: "eclipse"
	apply plugin: "groovy"
	apply plugin: "idea"
	apply plugin: "java"
	apply plugin: "org.springframework.boot"

	ext {

		gmetricsVersion = "0.7"
		spockVersion = "1.0-groovy-2.4"
	}

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	def defaultEncoding = "UTF-8"
	[
		compileGroovy,
		compileJava,
		compileTestGroovy,
		compileTestJava
	]*.options*.encoding = defaultEncoding

	repositories {

		jcenter()
		mavenCentral()
		mavenLocal()
	}

	dependencies {

		compile "org.gmetrics:GMetrics:${gmetricsVersion}"
		compile "org.codehaus.groovy:groovy"
		compile "org.springframework.boot:spring-boot-starter"

		testCompile "org.spockframework:spock-core:${spockVersion}"
		testCompile "org.springframework.boot:spring-boot-starter-test"
	}

	codenarc {

		configFile project(':').file('config/codenarc/rules.groovy')
		ignoreFailures false
		maxPriority1Violations 0
		maxPriority2Violations 0
		maxPriority3Violations 0
		toolVersion = "0.27.0"
	}

	dependencyUpdates.resolutionStrategy = {
		componentSelection { rules ->
			rules.all { ComponentSelection selection ->
				boolean rejected = [
					'alpha',
					'beta',
					'rc',
					'cr',
					'm'
				].any { qualifier ->
					selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
				}
				if (rejected) {
					selection.reject('Release candidate')
				}
			}
		}
	}
}
